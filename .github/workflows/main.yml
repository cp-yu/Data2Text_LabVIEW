name: Build DLL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cffi

    - name: Run Docker to build 32-bit DLL
      run: |
        docker run --rm -v $(pwd):/workspace -w /workspace i386/ubuntu:20.04 /bin/bash -c "\
        apt-get update && \
        apt-get install -y python3 python3-pip mingw-w64 && \
        python3 -m pip install cffi && \
        CC=i686-w64-mingw32-gcc python3 build_dll.py"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload DLL to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dlltest.dll
        asset_name: dlltest.dll
        asset_content_type: application/octet-stream
